import{d as defaultLocale}from"./config.js";import{g as getCollection,r as renderEntry}from"./_astro_content.js";async function addMetaToPost(t){const{remarkPluginFrontmatter:a}=await renderEntry(t);return{...t,remarkPluginFrontmatter:a}}async function checkPostSlugDuplication(t){const a=new Map,s=[];return t.forEach((t=>{const e=t.data.lang,n=t.data.abbrlink||t.id;a.has(e)||a.set(e,new Set);const o=a.get(e);o.has(n)?e?s.push(`Duplicate slug "${n}" found in "${e}" language post`):s.push(`Duplicate slug "${n}" found in universal post (applies to all languages)`):o.add(n)})),s}async function getPosts(t){const a=t||defaultLocale,s=await getCollection("posts",(({data:t})=>!t.draft&&(t.lang===a||""===t.lang)));return(await Promise.all(s.map(addMetaToPost))).sort(((t,a)=>a.data.published.valueOf()-t.data.published.valueOf()))}async function getRegularPosts(t){return(await getPosts(t)).filter((t=>!t.data.pin))}async function getPinnedPosts(t){return(await getPosts(t)).filter((t=>t.data.pin&&t.data.pin>0)).sort(((t,a)=>(a.data.pin||0)-(t.data.pin||0)))}async function getPostsByYear(t){const a=await getRegularPosts(t),s=new Map;return a.forEach((t=>{const a=t.data.published.getFullYear();s.has(a)||s.set(a,[]),s.get(a).push(t)})),s.forEach((t=>{t.sort(((t,a)=>{const s=t.data.published,e=a.data.published;return e.getMonth()-s.getMonth()||e.getDate()-s.getDate()}))})),new Map([...s.entries()].sort(((t,a)=>a[0]-t[0])))}async function getAllTags(t){const a=await getPostsGroupByTags(t),s=Array.from(a.entries());return s.sort(((t,a)=>a[1].length-t[1].length)),s.map((([t])=>t))}async function getPostsGroupByTags(t){const a=await getPosts(t),s=new Map;return a.forEach((t=>{t.data.tags?.forEach((a=>{s.has(a)||s.set(a,[]),s.get(a).push(t)}))})),s}async function getPostsByTag(t,a){return(await getPostsGroupByTags(a)).get(t)||[]}export{getPostsByYear as a,getPostsByTag as b,checkPostSlugDuplication as c,getAllTags as d,getPinnedPosts as g};